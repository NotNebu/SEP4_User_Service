# Workflow-navn
name: Build and Push gRPC User Microservice

# Definerer, hvornår workflowet skal køre
on:
  push: # Kører ved push til main branch
    branches: 
    - main
    - dev
  pull_request: # Kører ved pull requests til main branch
    branches: 
    - main
    - dev 

jobs:
  build-and-push: # Jobnavn
    runs-on: ubuntu-latest # Kører på en Ubuntu-maskine

    steps:
    # Tjekker koden ud fra repository
    - name: Check out repo
      uses: actions/checkout@v3

    # Sætter .NET op i workflowet
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x' 

    # Cacher NuGet-pakker for at reducere build-tid
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages # Sti til NuGet-pakker
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }} # Nøgle baseret på OS og projektfiler
        restore-keys: |
          ${{ runner.os }}-nuget- # Gendanner cache, hvis nøglen ikke findes

    # Gendanner afhængigheder med dotnet
    - name: Restore dependencies
      run: dotnet restore

    # Bygger projektet med dotnet
    - name: Build with dotnet
      run: dotnet build --configuration Release

    # Publicerer projektet til en output-mappe
    - name: Publish with dotnet
      run: dotnet publish -c Release -o out

    # Logger ind på Docker Hub ved hjælp af secrets
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }} # Docker Hub-brugernavn
        password: ${{ secrets.DOCKERHUB_TOKEN }} # Docker Hub-token

    # Bygger og uploader Docker-billedet til Docker Hub
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: . # Kontekst for Docker-build
        file: ./Dockerfile # Sti til Dockerfile
        push: true # Skubber billedet til Docker Hub
        tags: | # Tilføjer tags til Docker-billedet
          ${{ secrets.DOCKERHUB_USERNAME }}/sep4-user-service:latest # Seneste tag
          ${{ secrets.DOCKERHUB_USERNAME }}/sep4-user-service:${{ github.sha }} # Commit SHA som tag
